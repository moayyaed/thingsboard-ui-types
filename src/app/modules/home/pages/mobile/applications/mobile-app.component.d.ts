import { ChangeDetectorRef, Renderer2, ViewContainerRef } from '@angular/core';
import { EntityComponent } from '@home/components/entity/entity.component';
import { AppState } from '@core/core.state';
import { EntityTableConfig } from '@home/models/entity/entities-table-config.models';
import { TranslateService } from '@ngx-translate/core';
import { Store } from '@ngrx/store';
import { FormBuilder, FormGroup } from '@angular/forms';
import { EntityType } from '@shared/models/entity-type.models';
import { MobileApp, MobileAppStatus } from '@shared/models/mobile-app.models';
import { PlatformType } from '@shared/models/oauth2.models';
import { MatButton } from '@angular/material/button';
import { TbPopoverService } from '@shared/components/popover.service';
import * as i0 from "@angular/core";
export declare class MobileAppComponent extends EntityComponent<MobileApp> {
    protected store: Store<AppState>;
    protected translate: TranslateService;
    protected entityValue: MobileApp;
    protected entitiesTableConfigValue: EntityTableConfig<MobileApp>;
    protected cd: ChangeDetectorRef;
    fb: FormBuilder;
    private popoverService;
    private renderer;
    private viewContainerRef;
    entityType: typeof EntityType;
    platformTypes: PlatformType[];
    MobileAppStatus: typeof MobileAppStatus;
    PlatformType: typeof PlatformType;
    mobileAppStatuses: MobileAppStatus[];
    platformTypeTranslations: Map<PlatformType, string>;
    mobileAppStatusTranslations: Map<MobileAppStatus, string>;
    constructor(store: Store<AppState>, translate: TranslateService, entityValue: MobileApp, entitiesTableConfigValue: EntityTableConfig<MobileApp>, cd: ChangeDetectorRef, fb: FormBuilder, popoverService: TbPopoverService, renderer: Renderer2, viewContainerRef: ViewContainerRef);
    buildForm(entity: MobileApp): FormGroup;
    updateForm(entity: MobileApp): void;
    updateFormState(): void;
    prepareFormValue(value: MobileApp): MobileApp;
    generateAppSecret($event: Event): void;
    editReleaseNote($event: Event, matButton: MatButton, isLatest: boolean): void;
    private base64Format;
    static ɵfac: i0.ɵɵFactoryDeclaration<MobileAppComponent, [null, null, { optional: true; }, { optional: true; }, null, null, null, null, null]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<MobileAppComponent, "tb-mobile-app", never, {}, {}, never, never, false, never>;
}
