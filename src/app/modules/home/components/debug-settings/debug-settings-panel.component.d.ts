import { ChangeDetectorRef, EventEmitter, OnInit } from '@angular/core';
import { PageComponent } from '@shared/components/page.component';
import { TbPopoverComponent } from '@shared/components/popover.component';
import { FormBuilder } from '@angular/forms';
import { DebugSettings } from '@shared/models/entity.models';
import * as i0 from "@angular/core";
export declare class DebugSettingsPanelComponent extends PageComponent implements OnInit {
    private fb;
    private cd;
    popover: TbPopoverComponent<DebugSettingsPanelComponent>;
    failuresEnabled: boolean;
    allEnabled: boolean;
    allEnabledUntil: number;
    maxDebugModeDurationMinutes: number;
    debugLimitsConfiguration: string;
    onFailuresControl: import("@angular/forms").FormControl<boolean>;
    debugAllControl: import("@angular/forms").FormControl<boolean>;
    maxMessagesCount: string;
    maxTimeFrameSec: string;
    initialAllEnabled: boolean;
    isDebugAllActive$: import("rxjs").Observable<boolean>;
    onSettingsApplied: EventEmitter<DebugSettings>;
    constructor(fb: FormBuilder, cd: ChangeDetectorRef);
    ngOnInit(): void;
    onCancel(): void;
    onApply(): void;
    onReset(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DebugSettingsPanelComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DebugSettingsPanelComponent, "tb-debug-settings-panel", never, { "popover": { "alias": "popover"; "required": false; }; "failuresEnabled": { "alias": "failuresEnabled"; "required": false; }; "allEnabled": { "alias": "allEnabled"; "required": false; }; "allEnabledUntil": { "alias": "allEnabledUntil"; "required": false; }; "maxDebugModeDurationMinutes": { "alias": "maxDebugModeDurationMinutes"; "required": false; }; "debugLimitsConfiguration": { "alias": "debugLimitsConfiguration"; "required": false; }; }, {}, never, never, true, never>;
    static ngAcceptInputType_failuresEnabled: unknown;
    static ngAcceptInputType_allEnabled: unknown;
}
