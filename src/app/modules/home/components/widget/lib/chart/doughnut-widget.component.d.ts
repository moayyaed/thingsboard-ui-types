import { AfterViewInit, ChangeDetectorRef, ElementRef, OnDestroy, OnInit, Renderer2, TemplateRef } from '@angular/core';
import { DoughnutWidgetSettings } from '@home/components/widget/lib/chart/doughnut-widget.models';
import { WidgetContext } from '@home/models/widget-component.models';
import { ColorProcessor, ComponentStyle } from '@shared/models/widget-settings.models';
import { WidgetComponent } from '@home/components/widget/widget.component';
import { TranslateService } from '@ngx-translate/core';
import * as i0 from "@angular/core";
interface DoughnutLegendItem {
    id: number;
    color: string;
    label: string;
    value: string;
    hasValue: boolean;
    enabled: boolean;
    total?: boolean;
}
export declare class DoughnutWidgetComponent implements OnInit, OnDestroy, AfterViewInit {
    private widgetComponent;
    private renderer;
    private translate;
    private cd;
    doughnutContent: ElementRef<HTMLElement>;
    doughnutShape: ElementRef<HTMLElement>;
    doughnutLegend: ElementRef<HTMLElement>;
    settings: DoughnutWidgetSettings;
    ctx: WidgetContext;
    widgetTitlePanel: TemplateRef<any>;
    showLegend: boolean;
    legendClass: string;
    totalValueColor: ColorProcessor;
    backgroundStyle: ComponentStyle;
    overlayStyle: ComponentStyle;
    legendItems: DoughnutLegendItem[];
    legendLabelStyle: ComponentStyle;
    legendValueStyle: ComponentStyle;
    disabledLegendLabelStyle: ComponentStyle;
    disabledLegendValueStyle: ComponentStyle;
    private shapeResize$;
    private legendHorizontal;
    private decimals;
    private units;
    private total;
    private totalText;
    private scale;
    private dataItems;
    private drawDoughnutPending;
    private showTotal;
    private doughnutChart;
    private doughnutOptions;
    private svgShape;
    private totalTextNode;
    constructor(widgetComponent: WidgetComponent, renderer: Renderer2, translate: TranslateService, cd: ChangeDetectorRef);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    onInit(): void;
    onDataUpdated(): void;
    private updateSeriesData;
    onLegendItemEnter(item: DoughnutLegendItem): void;
    onLegendItemLeave(item: DoughnutLegendItem): void;
    toggleLegendItem(item: DoughnutLegendItem): void;
    private drawDoughnut;
    private renderTotal;
    private onResize;
    static ɵfac: i0.ɵɵFactoryDeclaration<DoughnutWidgetComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DoughnutWidgetComponent, "tb-doughnut-widget", never, { "ctx": "ctx"; "widgetTitlePanel": "widgetTitlePanel"; }, {}, never, never, false, never>;
}
export {};
