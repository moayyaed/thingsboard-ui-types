import { ChangeDetectorRef, EventEmitter, OnChanges, OnInit, Renderer2, SimpleChanges, ViewContainerRef } from '@angular/core';
import { ControlValueAccessor, UntypedFormBuilder, UntypedFormControl, UntypedFormGroup } from '@angular/forms';
import { TimeSeriesChartThreshold, TimeSeriesChartThresholdType, TimeSeriesChartYAxisId } from '@home/components/widget/lib/chart/time-series-chart.models';
import { TimeSeriesChartThresholdsPanelComponent } from '@home/components/widget/lib/settings/common/chart/time-series-chart-thresholds-panel.component';
import { IAliasController } from '@core/api/widget-api.models';
import { Datasource, DatasourceType, WidgetConfig } from '@shared/models/widget.models';
import { DataKeysCallbacks } from '@home/components/widget/config/data-keys.component.models';
import { DataKeyType } from '@shared/models/telemetry/telemetry.models';
import { MatButton } from '@angular/material/button';
import { TbPopoverService } from '@shared/components/popover.service';
import * as i0 from "@angular/core";
export declare class TimeSeriesChartThresholdRowComponent implements ControlValueAccessor, OnInit, OnChanges {
    private fb;
    private popoverService;
    private renderer;
    private viewContainerRef;
    private thresholdsPanel;
    private cd;
    DataKeyType: typeof DataKeyType;
    DatasourceType: typeof DatasourceType;
    TimeSeriesChartThresholdType: typeof TimeSeriesChartThresholdType;
    timeSeriesThresholdTypes: TimeSeriesChartThresholdType[];
    timeSeriesThresholdTypeTranslations: Map<TimeSeriesChartThresholdType, string>;
    get aliasController(): IAliasController;
    get dataKeyCallbacks(): DataKeysCallbacks;
    get datasource(): Datasource;
    get widgetConfig(): WidgetConfig;
    disabled: boolean;
    yAxisIds: TimeSeriesChartYAxisId[];
    thresholdRemoved: EventEmitter<any>;
    thresholdFormGroup: UntypedFormGroup;
    modelValue: TimeSeriesChartThreshold;
    latestKeyFormControl: UntypedFormControl;
    entityKeyFormControl: UntypedFormControl;
    private propagateChange;
    constructor(fb: UntypedFormBuilder, popoverService: TbPopoverService, renderer: Renderer2, viewContainerRef: ViewContainerRef, thresholdsPanel: TimeSeriesChartThresholdsPanelComponent, cd: ChangeDetectorRef);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    setDisabledState(isDisabled: boolean): void;
    writeValue(value: TimeSeriesChartThreshold): void;
    editThreshold($event: Event, matButton: MatButton): void;
    private updateValidators;
    private updateModel;
    static ɵfac: i0.ɵɵFactoryDeclaration<TimeSeriesChartThresholdRowComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TimeSeriesChartThresholdRowComponent, "tb-time-series-chart-threshold-row", never, { "disabled": "disabled"; "yAxisIds": "yAxisIds"; }, { "thresholdRemoved": "thresholdRemoved"; }, never, never, false, never>;
}
