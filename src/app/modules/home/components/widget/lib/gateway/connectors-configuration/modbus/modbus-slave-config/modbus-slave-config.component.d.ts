import { OnDestroy } from '@angular/core';
import { ControlValueAccessor, FormBuilder, FormControl, UntypedFormGroup, ValidationErrors, Validator } from '@angular/forms';
import { ModbusMethodType, ModbusOrderType, ModbusProtocolType, ModbusSerialMethodType, ModbusSlave, PortLimits, SlaveConfig } from '@home/components/widget/lib/gateway/gateway-widget.models';
import * as i0 from "@angular/core";
export declare class ModbusSlaveConfigComponent implements ControlValueAccessor, Validator, OnDestroy {
    private fb;
    slaveConfigFormGroup: UntypedFormGroup;
    showSecurityControl: FormControl<boolean>;
    ModbusProtocolLabelsMap: Map<ModbusProtocolType, string>;
    ModbusMethodLabelsMap: Map<ModbusMethodType | ModbusSerialMethodType, string>;
    portLimits: typeof PortLimits;
    readonly modbusProtocolTypes: ModbusProtocolType[];
    readonly modbusMethodTypes: ModbusMethodType[];
    readonly modbusSerialMethodTypes: ModbusSerialMethodType[];
    readonly modbusOrderType: ModbusOrderType[];
    readonly ModbusProtocolType: typeof ModbusProtocolType;
    readonly modbusBaudrates: number[];
    private isSlaveEnabled;
    private readonly serialSpecificControlKeys;
    private readonly tcpUdpSpecificControlKeys;
    private onChange;
    private onTouched;
    private destroy$;
    constructor(fb: FormBuilder);
    get protocolType(): ModbusProtocolType;
    ngOnDestroy(): void;
    registerOnChange(fn: (value: SlaveConfig) => void): void;
    registerOnTouched(fn: () => void): void;
    validate(): ValidationErrors | null;
    writeValue(slaveConfig: ModbusSlave): void;
    setDisabledState(isDisabled: boolean): void;
    private observeValueChanges;
    private observeTypeChange;
    private updateMethodType;
    private updateFormEnableState;
    private observeShowSecurity;
    private updateSecurityEnable;
    private updateEnablingByProtocol;
    private updateSlaveConfig;
    static ɵfac: i0.ɵɵFactoryDeclaration<ModbusSlaveConfigComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ModbusSlaveConfigComponent, "tb-modbus-slave-config", never, {}, {}, never, never, true, never>;
}
