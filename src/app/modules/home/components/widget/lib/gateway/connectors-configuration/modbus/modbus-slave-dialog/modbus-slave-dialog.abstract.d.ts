import { OnDestroy } from '@angular/core';
import { FormBuilder, FormControl, UntypedFormGroup } from '@angular/forms';
import { ModbusMethodType, ModbusOrderType, ModbusParity, ModbusProtocolType, ModbusSerialMethodType, ModbusSlaveInfo, PortLimits, ReportStrategyDefaultValue } from '@home/components/widget/lib/gateway/gateway-widget.models';
import { DialogComponent } from '@shared/components/dialog.component';
import { Store } from '@ngrx/store';
import { AppState } from '@core/core.state';
import { Router } from '@angular/router';
import { MatDialogRef } from '@angular/material/dialog';
import * as i0 from "@angular/core";
export declare abstract class ModbusSlaveDialogAbstract<Component, Config> extends DialogComponent<Component, Config> implements OnDestroy {
    protected fb: FormBuilder;
    protected store: Store<AppState>;
    protected router: Router;
    data: ModbusSlaveInfo;
    dialogRef: MatDialogRef<Component, Config>;
    slaveConfigFormGroup: UntypedFormGroup;
    showSecurityControl: FormControl<boolean>;
    portLimits: typeof PortLimits;
    readonly modbusProtocolTypes: ModbusProtocolType[];
    readonly modbusMethodTypes: ModbusMethodType[];
    readonly modbusSerialMethodTypes: ModbusSerialMethodType[];
    readonly modbusParities: ModbusParity[];
    readonly modbusByteSizes: number[];
    readonly modbusBaudrates: number[];
    readonly modbusOrderType: ModbusOrderType[];
    readonly ModbusProtocolType: typeof ModbusProtocolType;
    readonly ModbusParityLabelsMap: Map<ModbusParity, string>;
    readonly ModbusProtocolLabelsMap: Map<ModbusProtocolType, string>;
    readonly ModbusMethodLabelsMap: Map<ModbusMethodType | ModbusSerialMethodType, string>;
    readonly ReportStrategyDefaultValue: typeof ReportStrategyDefaultValue;
    readonly modbusHelpLink: string;
    private readonly serialSpecificControlKeys;
    private readonly tcpUdpSpecificControlKeys;
    private destroy$;
    constructor(fb: FormBuilder, store: Store<AppState>, router: Router, data: ModbusSlaveInfo, dialogRef: MatDialogRef<Component, Config>);
    get protocolType(): ModbusProtocolType;
    ngOnDestroy(): void;
    cancel(): void;
    add(): void;
    private initializeSlaveFormGroup;
    private updateSlaveFormGroup;
    private observeTypeChange;
    private updateMethodType;
    private updateControlsEnabling;
    private observeShowSecurity;
    private updateSecurityEnabling;
    protected abstract addFieldsToFormGroup(): void;
    protected abstract getSlaveResultData(): Config;
    static ɵfac: i0.ɵɵFactoryDeclaration<ModbusSlaveDialogAbstract<any, any>, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<ModbusSlaveDialogAbstract<any, any>, never, never, {}, {}, never, never, false, never>;
}
