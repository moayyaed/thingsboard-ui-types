import { OnDestroy, OnInit } from '@angular/core';
import { PageComponent } from '@shared/components/page.component';
import { Store } from '@ngrx/store';
import { AppState } from '@core/core.state';
import { TranslateService } from '@ngx-translate/core';
import { MatDialog } from '@angular/material/dialog';
import { ControlValueAccessor, FormBuilder, UntypedFormGroup, ValidationErrors, Validator } from '@angular/forms';
import { DeviceInfoType, OPCUaSourceType, SourceType } from '@home/components/widget/lib/gateway/gateway-widget.models';
import * as i0 from "@angular/core";
export declare class DeviceInfoTableComponent extends PageComponent implements ControlValueAccessor, Validator, OnInit, OnDestroy {
    protected store: Store<AppState>;
    translate: TranslateService;
    dialog: MatDialog;
    private fb;
    SourceTypeTranslationsMap: Map<SourceType | OPCUaSourceType, string>;
    DeviceInfoType: typeof DeviceInfoType;
    useSource: boolean;
    required: boolean;
    sourceTypes: Array<SourceType | OPCUaSourceType>;
    deviceInfoTypeValue: any;
    get deviceInfoType(): any;
    set deviceInfoType(value: any);
    mappingFormGroup: UntypedFormGroup;
    private destroy$;
    private propagateChange;
    constructor(store: Store<AppState>, translate: TranslateService, dialog: MatDialog, fb: FormBuilder);
    ngOnInit(): void;
    ngOnDestroy(): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    writeValue(deviceInfo: any): void;
    validate(): ValidationErrors | null;
    updateView(value: any): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DeviceInfoTableComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DeviceInfoTableComponent, "tb-device-info-table", never, { "useSource": { "alias": "useSource"; "required": false; }; "required": { "alias": "required"; "required": false; }; "sourceTypes": { "alias": "sourceTypes"; "required": false; }; "deviceInfoType": { "alias": "deviceInfoType"; "required": false; }; }, {}, never, never, false, never>;
}
