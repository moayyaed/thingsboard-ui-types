import { AfterViewInit, ChangeDetectorRef, ElementRef, OnDestroy, OnInit, Renderer2, TemplateRef } from '@angular/core';
import { WidgetContext } from '@home/models/widget-component.models';
import { WindSpeedDirectionLayout, WindSpeedDirectionWidgetSettings } from '@home/components/widget/lib/weather/wind-speed-direction-widget.models';
import { ColorProcessor, ComponentStyle } from '@shared/models/widget-settings.models';
import { WidgetComponent } from '@home/components/widget/widget.component';
import { ResizeObserver } from '@juggle/resize-observer';
import * as i0 from "@angular/core";
export declare class WindSpeedDirectionWidgetComponent implements OnInit, OnDestroy, AfterViewInit {
    private widgetComponent;
    private renderer;
    private cd;
    windSpeedDirectionShape: ElementRef<HTMLElement>;
    settings: WindSpeedDirectionWidgetSettings;
    ctx: WidgetContext;
    widgetTitlePanel: TemplateRef<any>;
    layout: WindSpeedDirectionLayout;
    centerValueColor: ColorProcessor;
    backgroundStyle: ComponentStyle;
    overlayStyle: ComponentStyle;
    shapeResize$: ResizeObserver;
    hasCardClickAction: boolean;
    private decimals;
    private units;
    private drawSvgShapePending;
    private svgShape;
    private arrow;
    private centerValueTextNode;
    private windDirectionDataKey;
    private centerValueDataKey;
    private windDirection;
    private centerValueText;
    constructor(widgetComponent: WidgetComponent, renderer: Renderer2, cd: ChangeDetectorRef);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    onInit(): void;
    onDataUpdated(): void;
    cardClick($event: Event): void;
    private drawSvg;
    private drawTickText;
    private renderValues;
    private renderCenterValueText;
    private onResize;
    static ɵfac: i0.ɵɵFactoryDeclaration<WindSpeedDirectionWidgetComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<WindSpeedDirectionWidgetComponent, "tb-wind-speed-direction-widget", never, { "ctx": "ctx"; "widgetTitlePanel": "widgetTitlePanel"; }, {}, never, never, false, never>;
}
