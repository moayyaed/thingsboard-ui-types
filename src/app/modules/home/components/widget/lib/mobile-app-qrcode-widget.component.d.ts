import { ChangeDetectorRef, ElementRef, NgZone, OnDestroy, OnInit, TemplateRef } from '@angular/core';
import { PageComponent } from '@shared/components/page.component';
import { AppState } from '@core/core.state';
import { Store } from '@ngrx/store';
import { BadgePosition, QrCodeSettings } from '@shared/models/mobile-app.models';
import { MobileApplicationService } from '@core/http/mobile-application.service';
import { WidgetContext } from '@home/models/widget-component.models';
import { UtilsService } from '@core/services/utils.service';
import { Observable } from 'rxjs';
import { ComponentStyle } from '@shared/models/widget-settings.models';
import { ImagePipe } from '@shared/pipe/image.pipe';
import { DomSanitizer } from '@angular/platform-browser';
import * as i0 from "@angular/core";
export declare class MobileAppQrcodeWidgetComponent extends PageComponent implements OnInit, OnDestroy {
    protected store: Store<AppState>;
    protected cd: ChangeDetectorRef;
    private mobileAppService;
    private utilsService;
    private elementRef;
    private imagePipe;
    private sanitizer;
    private zone;
    private readonly destroy$;
    private widgetResize$;
    private mobileAppSettingsValue;
    private deepLink;
    private deepLinkTTL;
    private deepLinkTTLTimeoutID;
    googlePlayLink: string;
    appStoreLink: string;
    previewMode: boolean;
    badgePosition: typeof BadgePosition;
    showBadgeContainer: boolean;
    backgroundStyle$: Observable<ComponentStyle>;
    overlayStyle: ComponentStyle;
    padding: string;
    qrCodeSVG: string;
    ctx: WidgetContext;
    widgetTitlePanel: TemplateRef<any>;
    set mobileAppSettings(settings: QrCodeSettings);
    get mobileAppSettings(): QrCodeSettings;
    constructor(store: Store<AppState>, cd: ChangeDetectorRef, mobileAppService: MobileApplicationService, utilsService: UtilsService, elementRef: ElementRef, imagePipe: ImagePipe, sanitizer: DomSanitizer, zone: NgZone);
    ngOnInit(): void;
    ngOnDestroy(): void;
    navigateByDeepLink($event: Event): void;
    private initMobileAppQRCode;
    private updateQRCode;
    static ɵfac: i0.ɵɵFactoryDeclaration<MobileAppQrcodeWidgetComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<MobileAppQrcodeWidgetComponent, "tb-mobile-app-qrcode-widget", never, { "ctx": { "alias": "ctx"; "required": false; }; "widgetTitlePanel": { "alias": "widgetTitlePanel"; "required": false; }; "mobileAppSettings": { "alias": "mobileAppSettings"; "required": false; }; }, {}, never, never, false, never>;
}
