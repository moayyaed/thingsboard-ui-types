import { AfterViewInit, ChangeDetectorRef, ElementRef, OnDestroy, OnInit, Renderer2, TemplateRef } from '@angular/core';
import { LabelCardWidgetSettings } from '@home/components/widget/lib/cards/label-card-widget.models';
import { WidgetContext } from '@home/models/widget-component.models';
import { Observable } from 'rxjs';
import { ComponentStyle } from '@shared/models/widget-settings.models';
import { ImagePipe } from '@shared/pipe/image.pipe';
import { DomSanitizer } from '@angular/platform-browser';
import * as i0 from "@angular/core";
export declare class LabelCardWidgetComponent implements OnInit, AfterViewInit, OnDestroy {
    private imagePipe;
    private sanitizer;
    private renderer;
    private cd;
    labelCardPanel: ElementRef<HTMLElement>;
    labelCardContent: ElementRef<HTMLElement>;
    labelCardRow: ElementRef<HTMLElement>;
    settings: LabelCardWidgetSettings;
    ctx: WidgetContext;
    widgetTitlePanel: TemplateRef<any>;
    backgroundStyle$: Observable<ComponentStyle>;
    overlayStyle: ComponentStyle;
    padding: string;
    label: string;
    labelStyle: ComponentStyle;
    showIcon: boolean;
    icon: string;
    iconStyle: ComponentStyle;
    hasCardClickAction: boolean;
    private panelResize$;
    constructor(imagePipe: ImagePipe, sanitizer: DomSanitizer, renderer: Renderer2, cd: ChangeDetectorRef);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    onInit(): void;
    cardClick($event: Event): void;
    private onResize;
    static ɵfac: i0.ɵɵFactoryDeclaration<LabelCardWidgetComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<LabelCardWidgetComponent, "tb-label-card-widget", never, { "ctx": { "alias": "ctx"; "required": false; }; "widgetTitlePanel": { "alias": "widgetTitlePanel"; "required": false; }; }, {}, never, never, false, never>;
}
