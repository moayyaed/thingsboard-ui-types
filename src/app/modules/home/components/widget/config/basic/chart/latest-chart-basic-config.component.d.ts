import { TemplateRef } from '@angular/core';
import { BasicWidgetConfigComponent } from '@home/components/widget/config/widget-config.component.models';
import { Datasource } from '@shared/models/widget.models';
import { LatestChartTooltipValueType, LatestChartWidgetSettings } from '@home/components/widget/lib/chart/latest-chart.models';
import { Store } from '@ngrx/store';
import { AppState } from '@core/core.state';
import { WidgetConfigComponent } from '@home/components/widget/widget-config.component';
import { UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';
import { WidgetConfigComponentData } from '@home/models/widget-component.models';
import { DoughnutLayout } from '@home/components/widget/lib/chart/doughnut-widget.models';
import * as i0 from "@angular/core";
export declare abstract class LatestChartBasicConfigComponent<S extends LatestChartWidgetSettings> extends BasicWidgetConfigComponent {
    protected store: Store<AppState>;
    protected widgetConfigComponent: WidgetConfigComponent;
    protected fb: UntypedFormBuilder;
    get datasource(): Datasource;
    get displayTimewindowConfig(): boolean;
    onlyHistoryTimewindow(): boolean;
    doughnutLayouts: DoughnutLayout[];
    doughnutLayoutTranslationMap: Map<DoughnutLayout, string>;
    doughnutHorizontal: boolean;
    doughnutLayoutImageMap: Map<DoughnutLayout, string>;
    pieChartLabelPositions: import("@home/components/widget/lib/chart/chart.models").PieChartLabelPosition[];
    pieChartLabelPositionTranslationMap: Map<import("@home/components/widget/lib/chart/chart.models").PieChartLabelPosition, string>;
    radarChartShapes: import("@home/components/widget/lib/chart/radar-chart.models").RadarChartShape[];
    radarChartShapeTranslations: Map<import("@home/components/widget/lib/chart/radar-chart.models").RadarChartShape, string>;
    chartLineTypes: import("@home/components/widget/lib/chart/chart.models").ChartLineType[];
    chartLineTypeTranslations: Map<import("@home/components/widget/lib/chart/chart.models").ChartLineType, string>;
    chartShapes: import("@home/components/widget/lib/chart/chart.models").ChartShape[];
    chartShapeTranslations: Map<import("@home/components/widget/lib/chart/chart.models").ChartShape, string>;
    chartLabelPositions: import("@home/components/widget/lib/chart/chart.models").ChartLabelPosition[];
    chartLabelPositionTranslations: Map<import("@home/components/widget/lib/chart/chart.models").ChartLabelPosition, string>;
    legendPositions: import("@shared/models/widget.models").LegendPosition[];
    legendPositionTranslationMap: Map<import("@shared/models/widget.models").LegendPosition, string>;
    latestChartTooltipValueTypes: LatestChartTooltipValueType[];
    latestChartTooltipValueTypeTranslationMap: Map<LatestChartTooltipValueType, string>;
    latestChartWidgetConfigForm: UntypedFormGroup;
    valuePreviewFn: any;
    tooltipValuePreviewFn: any;
    get doughnutTotalEnabled(): boolean;
    constructor(store: Store<AppState>, widgetConfigComponent: WidgetConfigComponent, fb: UntypedFormBuilder);
    protected configForm(): UntypedFormGroup;
    protected setupConfig(widgetConfig: WidgetConfigComponentData): void;
    protected onConfigSet(configData: WidgetConfigComponentData): void;
    protected prepareOutputConfig(config: any): WidgetConfigComponentData;
    protected validatorTriggers(): string[];
    protected updateValidators(emitEvent: boolean, trigger?: string): void;
    protected setupLatestChartControls(latestChartWidgetConfigForm: UntypedFormGroup, settings: S): void;
    protected prepareOutputLatestChartConfig(config: any): void;
    protected latestChartValidatorTriggers(): string[];
    protected updateLatestChartValidators(latestChartWidgetConfigForm: UntypedFormGroup, emitEvent: boolean, trigger?: string): void;
    protected abstract defaultSettings(): S;
    abstract latestChartConfigTemplate(): TemplateRef<any>;
    private getSeries;
    private setSeries;
    private getCardButtons;
    private setCardButtons;
    private _valuePreviewFn;
    private _tooltipValuePreviewFn;
    static ɵfac: i0.ɵɵFactoryDeclaration<LatestChartBasicConfigComponent<any>, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<LatestChartBasicConfigComponent<any>, never, never, {}, {}, never, never, false, never>;
}
