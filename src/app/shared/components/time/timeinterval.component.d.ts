import { OnDestroy, OnInit } from '@angular/core';
import { ControlValueAccessor, FormBuilder, FormGroup } from '@angular/forms';
import { TimeService } from '@core/services/time.service';
import { MatFormFieldAppearance, SubscriptSizing } from '@angular/material/form-field';
import { Interval, TimeInterval } from '@shared/models/time/time.models';
import * as i0 from "@angular/core";
export declare class TimeintervalComponent implements OnInit, ControlValueAccessor, OnDestroy {
    private timeService;
    private fb;
    minValue: number;
    maxValue: number;
    disabledAdvancedState: boolean;
    set min(min: number);
    set max(max: number);
    predefinedName: string;
    isEdit: boolean;
    set disabledAdvanced(disabledAdvanced: boolean);
    useCalendarIntervals: boolean;
    disabled: boolean;
    subscriptSizing: SubscriptSizing;
    appearance: MatFormFieldAppearance;
    intervals: Array<TimeInterval>;
    advanced: boolean;
    timeintervalFormGroup: FormGroup;
    customTimeInterval: TimeInterval;
    private modelValue;
    private rendered;
    private propagateChangeValue;
    private propagateChange;
    private destroy$;
    constructor(timeService: TimeService, fb: FormBuilder);
    ngOnInit(): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    setDisabledState(isDisabled: boolean): void;
    writeValue(interval: Interval): void;
    private updateIntervalValue;
    private setInterval;
    private setCustomInterval;
    private boundInterval;
    private updateView;
    private calculateIntervalMs;
    onIntervalChange(): void;
    private onSecsChange;
    private onMinsChange;
    private onHoursChange;
    private onDaysChange;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TimeintervalComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TimeintervalComponent, "tb-timeinterval", never, { "min": { "alias": "min"; "required": false; }; "max": { "alias": "max"; "required": false; }; "predefinedName": { "alias": "predefinedName"; "required": false; }; "isEdit": { "alias": "isEdit"; "required": false; }; "disabledAdvanced": { "alias": "disabledAdvanced"; "required": false; }; "useCalendarIntervals": { "alias": "useCalendarIntervals"; "required": false; }; "disabled": { "alias": "disabled"; "required": false; }; "subscriptSizing": { "alias": "subscriptSizing"; "required": false; }; "appearance": { "alias": "appearance"; "required": false; }; }, {}, never, ["*"], false, never>;
}
