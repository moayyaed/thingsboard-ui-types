import { ChangeDetectorRef, OnDestroy } from '@angular/core';
import { PageComponent } from '@shared/components/page.component';
import { Store } from '@ngrx/store';
import { AppState } from '@core/core.state';
import { ControlValueAccessor, FormControl } from '@angular/forms';
import { DndDropEvent } from 'ngx-drag-drop';
import { ImageLinkType } from '@shared/components/image/gallery-image-input.component';
import { MatDialog } from '@angular/material/dialog';
import * as i0 from "@angular/core";
export declare class MultipleGalleryImageInputComponent extends PageComponent implements OnDestroy, ControlValueAccessor {
    protected store: Store<AppState>;
    private dialog;
    private cd;
    label: string;
    required: boolean;
    disabled: boolean;
    imageUrls: string[];
    ImageLinkType: typeof ImageLinkType;
    linkType: ImageLinkType;
    externalLinkControl: FormControl<any>;
    dragIndex: number;
    private propagateChange;
    constructor(store: Store<AppState>, dialog: MatDialog, cd: ChangeDetectorRef);
    ngOnDestroy(): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    setDisabledState(isDisabled: boolean): void;
    writeValue(value: string[]): void;
    private updateModel;
    private reset;
    clearImage(index: number): void;
    setLink($event: Event): void;
    declineLink($event: Event): void;
    applyLink($event: Event): void;
    toggleGallery($event: Event): void;
    imageDragStart(index: number): void;
    imageDragEnd(): void;
    imageDrop(event: DndDropEvent): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<MultipleGalleryImageInputComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<MultipleGalleryImageInputComponent, "tb-multiple-gallery-image-input", never, { "label": { "alias": "label"; "required": false; }; "required": { "alias": "required"; "required": false; }; "disabled": { "alias": "disabled"; "required": false; }; }, {}, never, never, false, never>;
}
